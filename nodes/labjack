#!/usr/bin/env python

from __future__ import print_function

import os

import rospy

from labjack import stream_to_csv


def main():
    rospy.init_node('labjack')

    # TODO is this necessary for params to be guaranteed to be set?
    # delete if not.
    #rospy.sleep(1.0)

    param_ns = 'labjack/'
    input_channels = rospy.get_param(param_ns + 'input_channels', [0])
    resolution_index = rospy.get_param(param_ns + 'resolution_index', 0)
    time_col = rospy.get_param(param_ns + 'time_col', True)
    input_channel_names = rospy.get_param(param_ns + 'input_channel_names',
        None
    )
    if input_channel_names is not None:
        # Since ROS requires dict keys to be str, but stream_to_csv expects
        # these keys to be int.
        input_channel_names = {
            int(k): v for k, v in input_channel_names.items()
        }

    # TODO maybe also allow this to reference another parameter?
    duration_s = rospy.get_param(param_ns + 'duration_s', None)

    csv_path = rospy.get_param(param_ns + 'csv_filename', 'labjack.csv')

    csv_dir_rosparam = rospy.get_param(param_ns + 'csv_dir_rosparam', None)

    if csv_dir_rosparam is not None:
        csv_dir = rospy.get_param(csv_dir_rosparam)
        if csv_dir is not None:
            assert os.path.isdir(csv_dir)
            csv_path = os.path.join(csv_dir, csv_path)

    stream_to_csv(csv_path, duration_s=duration_s,
        input_channels=input_channels, resolution_index=resolution_index,
        input_channel_names=input_channel_names, time_col=time_col
    )


if __name__ == '__main__':
    main()

